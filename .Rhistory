install.packages("partykit")
library(partykit)
library(libcoin)
library(partykit)
install.packages("libcoin")
library(partykit)
install.packages("party")
library(party)
library("party")
install.packages("ISLR")
library("ISLR")
install.packages("rpart")
library(rpart)
fit <- rpart(V14 ~ V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9 + V10 + V11 + V12 + V13,
method = "class", data = dataset)
printcp(fit)
plotcp(fit)
summary(fit)
#plot tree
plot(fit, uniform = TRUE, main="Classification for Heart Disease")
text(fit, use.n=TRUE, all=TRUE, cex=.8)
# create attractive postscript plot of tree
post(fit, file = "c:/tree.ps",
title = "Classification Tree for Kyphosis")
install.packages("randomForest")
library(randomForest)
fit <- randomForest(V14 ~ V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9 + V10 + V11 + V12 + V13,
data = dataset)
print(fit)
library(rpart)
fit <- rpart(V14 ~ V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9 + V10 + V11 + V12 + V13,
method = "class", data = dataset)
printcp(fit)
plotcp(fit)
summary(fit)
rsq.rpart(fit)
print(fit)
fit <- rpart(V14 ~ V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9 + V10 + V11 + V12 + V13,
method = "anova", data = dataset)
printcp(fit)
plotcp(fit)
summary(fit)
print(fit)
rsq.rpart(fit)
fit <- rpart(V14 ~ V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9 + V10 + V11 + V12 + V13,
method = "class", data = dataset)
printcp(fit)
plotcp(fit)
summary(fit)
summary(fit)
plotcp(fit)
print(fit)
printcp(fit)
install.packages("caret")
install.packages("e1071")
install.packages("shiny")
shiny::runApp('E:/Backup 2/Kuliah/Pasca/shiny')
install.packages(c("shiny", "shinycssloaders"))
install.packages(c("shiny", "shinycssloaders"))
library(shiny)
runApp('E:/Backup 2/Kuliah/Pasca/Pola/Proyek Akhir Shiny/Shiny')
install.packages(c("pnn", "taRifx"))
runApp('E:/Backup 2/Kuliah/Pasca/Pola/Proyek Akhir Shiny/Shiny')
fluidPage(
titlePanel("Aplikasi Hitung Luas Lingkaran!"),
)
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp()
runApp()
runApp()
runApp()
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('E:/Backup 2/Kuliah/Pasca/Pola/Proyek Akhir Shiny/Shiny')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
dataset <- read.csv(file="C:/Users/Eng-Ryan/Documents/Kuliah/processed.cleveland.csv",header=FALSE)
summary(dataset)
dataset$V12[which(dataset$V12 == "?")] <- NA
dataset <- read.csv(file="C:/Users/Eng-Ryan/Documents/Kuliah/processed.cleveland.csv",header=FALSE)
summary(dataset)
dataset$V12[which(dataset$V12 == "?")] <- NA
dataset$V13[which(dataset$V13 == "?")] <- NA
Mode <- function(x, na.rm = FALSE) {
if(na.rm){
x = x[!is.na(x)]
}
ux <- unique(x)
return(ux[which.max(tabulate(match(x, ux)))])
}
dataset$V12[is.na(dataset$V12)] <- Mode(dataset$V12)
dataset$V13[is.na(dataset$V13)] <- Mode(dataset$V13)
dataset$V12 <- as.numeric(dataset$V12)
dataset$V13 <- as.numeric(dataset$V13)
dataset$V14[dataset$V14 > 0] <- 1
str(dataset)
set.seed(1234)
indeks <- sample(2, nrow(dataset), replace = TRUE, prob = c(0.8,0.2))
traindata <- dataset[indeks == 1,]
testdata <- dataset[indeks == 2,]
library(e1071)
model_svm <- svm(V14~., data=traindata, kernel="radial", gamma=0.01, cost=20, type = "C-classification")
ypred <- predict(model_svm, testdata)
ypred <- as.factor(ypred)
testdata$V14 <- as.factor(testdata$V14)
library(caret)
confusionMatrix(ypred, testdata$V14)
ypred
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
dataset[14]
dataset[:14]
dataset$V14
input <- c(input$age, input$sex, input$cp, input$trestbps,
input$chol, input$fbs, input$restecg, input$thalach,
input$exang, input$oldpeak, input$slope, input$ca, input$thal
)
runApp('Kuliah/Pakar')
runApp()
runApp()
runApp()
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
input <- c(input$age, input$sex, input$cp, input$trestbps,
input$chol, input$fbs, input$restecg, input$thalach,
input$exang, input$oldpeak, input$slope, input$ca, input$thal
)
runApp('Kuliah/Pakar')
runApp()
runApp('Kuliah/Pakar')
runApp()
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
y
testdata[1]
testdata[1:]
testdata[:1]
testdata[,1]
testdata[1,]
y
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp()
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
View(testdata)
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
names(y)[1] <- "V1"
names(y)[1] <- "V1"
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
dataset[1]
dataset[1,]
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
dataset <- read.csv(file="C:/Users/Eng-Ryan/Documents/Kuliah/processed.cleveland.csv",header=FALSE)
View(dataset)
dataset$V12[which(dataset$V12 == "?")] <- NA
dataset$V13[which(dataset$V13 == "?")] <- NA
Mode <- function(x, na.rm = FALSE) {
if(na.rm){
x = x[!is.na(x)]
}
ux <- unique(x)
return(ux[which.max(tabulate(match(x, ux)))])
}
dataset$V12[is.na(dataset$V12)] <- Mode(dataset$V12)
dataset$V13[is.na(dataset$V13)] <- Mode(dataset$V13)
dataset$V12 <- as.numeric(dataset$V12)
dataset$V13 <- as.numeric(dataset$V13)
dataset$V14[dataset$V14 > 0] <- 1
dataset$V13
dataset <- read.csv(file="C:/Users/Eng-Ryan/Documents/Kuliah/processed.cleveland.csv",header=FALSE)
summary(dataset)
dataset$V12[which(dataset$V12 == "?")] <- NA
dataset$V13[which(dataset$V13 == "?")] <- NA
Mode <- function(x, na.rm = FALSE) {
if(na.rm){
x = x[!is.na(x)]
}
ux <- unique(x)
return(ux[which.max(tabulate(match(x, ux)))])
}
dataset$V12[is.na(dataset$V12)] <- Mode(dataset$V12)
dataset$V13[is.na(dataset$V13)] <- Mode(dataset$V13)
dataset$V12 <- as.integer(dataset$V12)
dataset$V13 <- as.integer(dataset$V13)
dataset$V13
dataset <- read.csv(file="C:/Users/Eng-Ryan/Documents/Kuliah/processed.cleveland.csv",header=FALSE)
summary(dataset)
dataset$V12[which(dataset$V12 == "?")] <- NA
dataset$V13[which(dataset$V13 == "?")] <- NA
Mode <- function(x, na.rm = FALSE) {
if(na.rm){
x = x[!is.na(x)]
}
ux <- unique(x)
return(ux[which.max(tabulate(match(x, ux)))])
}
dataset$V12[is.na(dataset$V12)] <- Mode(dataset$V12)
dataset$V13[is.na(dataset$V13)] <- Mode(dataset$V13)
dataset$V13
dataset$V14[dataset$V14 > 0] <- 1
str(dataset)
dataset$V12 <- as.double(dataset$V12)
dataset$V13 <- as.double(dataset$V13)
dataset$V13
dataset$V12
str(dataset)
dataset <- read.csv(file="C:/Users/Eng-Ryan/Documents/Kuliah/processed.cleveland.csv",header=FALSE)
summary(dataset)
dataset$V12[which(dataset$V12 == "?")] <- NA
dataset$V13[which(dataset$V13 == "?")] <- NA
Mode <- function(x, na.rm = FALSE) {
if(na.rm){
x = x[!is.na(x)]
}
ux <- unique(x)
return(ux[which.max(tabulate(match(x, ux)))])
}
dataset$V13[is.na(dataset$V13)] <- Mode(dataset$V13)
dataset$V13[(dataset$V13) == "3.0"] <- 3
dataset$V13[(dataset$V13) == "6.0"] <- 6
dataset$V13[(dataset$V13) == "7.0"] <- 7
dataset <- read.csv(file="C:/Users/Eng-Ryan/Documents/Kuliah/processed.cleveland.csv",header=FALSE)
summary(dataset)
dataset$V12[which(dataset$V12 == "?")] <- NA
dataset$V13[which(dataset$V13 == "?")] <- NA
Mode <- function(x, na.rm = FALSE) {
if(na.rm){
x = x[!is.na(x)]
}
ux <- unique(x)
return(ux[which.max(tabulate(match(x, ux)))])
}
dataset$V13[is.na(dataset$V13)] <- Mode(dataset$V13)
dataset$V13[(dataset$V13) == "3.0"] <- 3
dataset$V13["3.0"] <- 3
dataset$temp<- NULL
dataset$temp[(dataset$V13) == "3.0"] <- 3
dataset$temp[(dataset$V13) == "6.0"] <- 6
dataset$temp[(dataset$V13) == "7.0"] <- 7
dataset$V13 <- dataset$temp
dataset$V13
dataset <- read.csv(file="C:/Users/Eng-Ryan/Documents/Kuliah/processed.cleveland.csv",header=FALSE)
summary(dataset)
dataset$V12[which(dataset$V12 == "?")] <- NA
dataset$V13[which(dataset$V13 == "?")] <- NA
Mode <- function(x, na.rm = FALSE) {
if(na.rm){
x = x[!is.na(x)]
}
ux <- unique(x)
return(ux[which.max(tabulate(match(x, ux)))])
}
dataset$V12[is.na(dataset$V12)] <- Mode(dataset$V12)
dataset$V13[is.na(dataset$V13)] <- Mode(dataset$V13)
dataset$V13
dataset$temp<- NULL
dataset$temp[(dataset$V13) == "3.0"] <- 3
dataset$temp
dataset$temp[(dataset$V13) == "6.0"] <- 6
dataset$temp
dataset$temp[(dataset$V13) == "7.0"] <- 7
dataset$temp
dataset$V13 <- dataset$temp
dataset$V13
dataset$V12
dataset$temp<- NULL
dataset$temp[(dataset$V12) == "0.0"] <- 0
dataset$temp[(dataset$V12) == "1.0"] <- 1
dataset$temp[(dataset$V12) == "2.0"] <- 2
dataset$temp[(dataset$V12) == "3.0"] <- 3
dataset$V12 <- dataset$temp
dataset
dataset$temp <- NULL
dataset
dataset$V14[dataset$V14 > 0] <- 1
str(dataset)
set.seed(1234)
indeks <- sample(2, nrow(dataset), replace = TRUE, prob = c(0.8,0.2))
traindata <- dataset[indeks == 1,]
testdata <- dataset[indeks == 2,]
library(e1071)
model_svm <- svm(V14~., data=traindata, kernel="radial", gamma=0.01, cost=20, type = "C-classification")
ypred <- predict(model_svm, testdata)
ypred <- as.factor(ypred)
testdata$V14 <- as.factor(testdata$V14)
library(caret)
confusionMatrix(ypred, testdata$V14)
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
shiny::runApp('Kuliah/Pakar')
dataset <- read.csv(file="C:/Users/Eng-Ryan/Documents/Kuliah/processed.cleveland.csv",header=FALSE)
summary(dataset)
dataset$V12[which(dataset$V12 == "?")] <- NA
dataset$V13[which(dataset$V13 == "?")] <- NA
Mode <- function(x, na.rm = FALSE) {
if(na.rm){
x = x[!is.na(x)]
}
ux <- unique(x)
return(ux[which.max(tabulate(match(x, ux)))])
}
dataset$V12[is.na(dataset$V12)] <- Mode(dataset$V12)
dataset$V13[is.na(dataset$V13)] <- Mode(dataset$V13)
dataset$temp<- NULL
dataset$temp[(dataset$V13) == "3.0"] <- 3
dataset$temp[(dataset$V13) == "6.0"] <- 6
dataset$temp[(dataset$V13) == "7.0"] <- 7
dataset$V13 <- dataset$temp
dataset$temp<- NULL
dataset$temp[(dataset$V12) == "0.0"] <- 0
dataset$temp[(dataset$V12) == "1.0"] <- 1
dataset$temp[(dataset$V12) == "2.0"] <- 2
dataset$temp[(dataset$V12) == "3.0"] <- 3
dataset$V12 <- dataset$temp
dataset$temp <- NULL
dataset$V14[dataset$V14 > 0] <- 1
str(dataset)
set.seed(1234)
indeks <- sample(2, nrow(dataset), replace = TRUE, prob = c(0.8,0.2))
traindata <- dataset[indeks == 1,]
testdata <- dataset[indeks == 2,]
library(e1071)
model_svm <- svm(V14~., data=traindata, kernel="radial", gamma=0.01, cost=20, type = "C-classification")
ypred <- predict(model_svm, testdata)
ypred <- as.factor(ypred)
testdata$V14 <- as.factor(testdata$V14)
library(caret)
cm <- confusionMatrix(ypred, testdata$V14)
cm
cm$positive
cm$table
cm$overall
cm$overall[1]
runApp('Kuliah/Pakar')
round(cm$overall[1])
float(cm$overall[1])
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
shiny::runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
shiny::runApp('Kuliah/Pakar 2')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar')
runApp('Kuliah/Pakar 2')
runApp('Kuliah/Pakar 2')
#Perbandingan Kriteria
#Pairwise matrix:
#                approval  sumberDaya  stakeholder  dukunganPublik
# approval           1          4            1             6
# sumberDaya        1/4         1           1/3            4
# stakeholder        1          3            1             5
# dukunganPublik    1/6        1/4          1/5            1
pairwiseKriteria = c(1,1,1,1,1,1,1,1,1)
jumlahEigen = sqrt(length(pairwiseKriteria))
matKriteria = matrix(data = pairwiseKriteria, ncol = jumlahEigen, byrow = T)
eigSebelum = numeric(jumlahEigen)
selisihEig = rep(1, jumlahEigen)
matOlah = matKriteria
while (all(selisihEig > 0.0001)) {
eigSekarang = c()
matOlah = matOlah %*% matOlah
for (j in 1:dim(matOlah)[1]) {
eigSekarang[j] = sum(matOlah[j,])/sum(matOlah)
}
selisihEig = abs(eigSekarang - eigSebelum)
eigSebelum = eigSekarang
print(selisihEig)
}
konsistensi = function(matriksPairwise, eigen){
weightedSumVector = matriksPairwise %*% eigen
consistencyVector = weightedSumVector/eigen
rataan = mean(consistencyVector)
n = length(eigen)
randomIndex = ri(n)
ci = (rataan - n) / (n - 1)
return(ci/randomIndex)
}
ri = function(n){
nilai = c(0.00, 0.58, 0.90, 1.12, 1.24, 1.32, 1.41)
for (i in 1:length(nilai)) {
if (n == i+1) return(nilai[i])
}
}
eigSekarang
runApp('Kuliah/Pakar 2')
install.packages("shinyWidgets")
runApp('Kuliah/Pakar 2')
month.name
runApp('Kuliah/Pakar 2')
arr = c("9", "8", "7", "6", "5", "4", "3", "2", "1", "2", "3", "4", "5", "6", "7", "8", "9")
arr
arr[0]
arr[1]
runApp('Kuliah/Pakar 2')
install.packages("DT")
library(shiny); runApp('Kuliah/coba.r')
runApp('ahp')
runApp('Kuliah/ahp')
runApp('Kuliah/ahp')
runApp('Kuliah/ahp')
runApp('Kuliah/ahp')
runApp('Kuliah/ahp')
runApp('Kuliah/ahp')
runApp()
runApp()
runApp('Kuliah/ahp')
runApp()
runApp('Kuliah/ahp')
runApp()
runApp('Kuliah/ahp')
runApp()
runApp('Kuliah/ahp')
runApp('Kuliah/ahp')
runApp('Kuliah/ahp')
View(responses)
runApp('Kuliah/ahp')
runApp('Kuliah/ahp')
shiny::runApp('Kuliah/ahp')
runApp('Kuliah/ahp')
runApp()
runApp('Kuliah/ahp')
runApp('Kuliah/ahp')
runApp('Kuliah/ahp')
View(namaPakar)
runApp('Kuliah/ahp')
View(namaPakar)
View(namaPakar)
runApp('Kuliah/ahp')
runApp('Kuliah/ahp')
runApp('Kuliah/ahp')
